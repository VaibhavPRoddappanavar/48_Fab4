[
  {
    "route": "https://jnnce.ac.in/",
    "attack": "headers",
    "evidence": "Critical headers missing: CSP, X-Frame-Options, Server: Apache",
    "severity": "high",
    "solution": {
      "solution": "Implement comprehensive security headers to protect against common web vulnerabilities",
      "remediation_steps": [
        "Configure Content Security Policy (CSP) to prevent XSS attacks",
        "Enable HTTP Strict Transport Security (HSTS) for HTTPS enforcement",
        "Add X-Frame-Options to prevent clickjacking attacks",
        "Set X-Content-Type-Options to prevent MIME type sniffing"
      ],
      "code_snippet": "// Node.js Express with Helmet\nconst helmet = require('helmet');\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"]\n    }\n  },\n  hsts: { maxAge: 31536000, includeSubDomains: true }\n}));\n\n// Nginx configuration\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;",
      "resource_links": [
        {
          "type": "doc",
          "title": "OWASP Secure Headers Project",
          "url": "https://owasp.org/www-project-secure-headers/",
          "youtube_id": null
        },
        {
          "type": "blog",
          "title": "Security Headers Best Practices",
          "url": "https://securityheaders.com/",
          "youtube_id": null
        },
        {
          "type": "youtube",
          "title": "Web Security Headers Explained",
          "url": "https://www.youtube.com/watch?v=zEV3HOuM_Vw",
          "youtube_id": "zEV3HOuM_Vw"
        }
      ],
      "cwe_cve": "CWE-16",
      "priority": "P0",
      "estimated_effort": "med",
      "confidence": "high",
      "waf_rules": [],
      "notes": "Auto-generated solution based on vulnerability type"
    }
  },
  {
    "route": "https://jnnce.ac.in/index.html",
    "attack": "headers",
    "evidence": "Critical headers missing: CSP, X-Frame-Options, Server: Apache",
    "severity": "high",
    "solution": {
      "solution": "Implement comprehensive security headers to protect against common web vulnerabilities",
      "remediation_steps": [
        "Configure Content Security Policy (CSP) to prevent XSS attacks",
        "Enable HTTP Strict Transport Security (HSTS) for HTTPS enforcement",
        "Add X-Frame-Options to prevent clickjacking attacks",
        "Set X-Content-Type-Options to prevent MIME type sniffing"
      ],
      "code_snippet": "// Node.js Express with Helmet\nconst helmet = require('helmet');\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"]\n    }\n  },\n  hsts: { maxAge: 31536000, includeSubDomains: true }\n}));\n\n// Nginx configuration\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;",
      "resource_links": [
        {
          "type": "doc",
          "title": "OWASP Secure Headers Project",
          "url": "https://owasp.org/www-project-secure-headers/",
          "youtube_id": null
        },
        {
          "type": "blog",
          "title": "Security Headers Best Practices",
          "url": "https://securityheaders.com/",
          "youtube_id": null
        },
        {
          "type": "youtube",
          "title": "Web Security Headers Explained",
          "url": "https://www.youtube.com/watch?v=zEV3HOuM_Vw",
          "youtube_id": "zEV3HOuM_Vw"
        }
      ],
      "cwe_cve": "CWE-16",
      "priority": "P0",
      "estimated_effort": "med",
      "confidence": "high",
      "waf_rules": [],
      "notes": "Auto-generated solution based on vulnerability type"
    }
  },
  {
    "route": "https://jnnce.ac.in/aboutjnnce.html",
    "attack": "headers",
    "evidence": "Critical headers missing: CSP, X-Frame-Options, Server: Apache",
    "severity": "high",
    "solution": {
      "solution": "Implement comprehensive security headers to protect against common web vulnerabilities",
      "remediation_steps": [
        "Configure Content Security Policy (CSP) to prevent XSS attacks",
        "Enable HTTP Strict Transport Security (HSTS) for HTTPS enforcement",
        "Add X-Frame-Options to prevent clickjacking attacks",
        "Set X-Content-Type-Options to prevent MIME type sniffing"
      ],
      "code_snippet": "// Node.js Express with Helmet\nconst helmet = require('helmet');\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"]\n    }\n  },\n  hsts: { maxAge: 31536000, includeSubDomains: true }\n}));\n\n// Nginx configuration\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;",
      "resource_links": [
        {
          "type": "doc",
          "title": "OWASP Secure Headers Project",
          "url": "https://owasp.org/www-project-secure-headers/",
          "youtube_id": null
        },
        {
          "type": "blog",
          "title": "Security Headers Best Practices",
          "url": "https://securityheaders.com/",
          "youtube_id": null
        },
        {
          "type": "youtube",
          "title": "Web Security Headers Explained",
          "url": "https://www.youtube.com/watch?v=zEV3HOuM_Vw",
          "youtube_id": "zEV3HOuM_Vw"
        }
      ],
      "cwe_cve": "CWE-16",
      "priority": "P0",
      "estimated_effort": "med",
      "confidence": "high",
      "waf_rules": [],
      "notes": "Auto-generated solution based on vulnerability type"
    }
  },
  {
    "route": "https://jnnce.ac.in/vision.html",
    "attack": "headers",
    "evidence": "Critical headers missing: CSP, X-Frame-Options, Server: Apache",
    "severity": "high",
    "solution": {
      "solution": "Implement comprehensive security headers to protect against common web vulnerabilities",
      "remediation_steps": [
        "Configure Content Security Policy (CSP) to prevent XSS attacks",
        "Enable HTTP Strict Transport Security (HSTS) for HTTPS enforcement",
        "Add X-Frame-Options to prevent clickjacking attacks",
        "Set X-Content-Type-Options to prevent MIME type sniffing"
      ],
      "code_snippet": "// Node.js Express with Helmet\nconst helmet = require('helmet');\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"]\n    }\n  },\n  hsts: { maxAge: 31536000, includeSubDomains: true }\n}));\n\n// Nginx configuration\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;",
      "resource_links": [
        {
          "type": "doc",
          "title": "OWASP Secure Headers Project",
          "url": "https://owasp.org/www-project-secure-headers/",
          "youtube_id": null
        },
        {
          "type": "blog",
          "title": "Security Headers Best Practices",
          "url": "https://securityheaders.com/",
          "youtube_id": null
        },
        {
          "type": "youtube",
          "title": "Web Security Headers Explained",
          "url": "https://www.youtube.com/watch?v=zEV3HOuM_Vw",
          "youtube_id": "zEV3HOuM_Vw"
        }
      ],
      "cwe_cve": "CWE-16",
      "priority": "P0",
      "estimated_effort": "med",
      "confidence": "high",
      "waf_rules": [],
      "notes": "Auto-generated solution based on vulnerability type"
    }
  },
  {
    "route": "https://jnnce.ac.in/aboutnes.html",
    "attack": "headers",
    "evidence": "Critical headers missing: CSP, X-Frame-Options, Server: Apache",
    "severity": "high",
    "solution": {
      "solution": "Implement comprehensive security headers to protect against common web vulnerabilities",
      "remediation_steps": [
        "Configure Content Security Policy (CSP) to prevent XSS attacks",
        "Enable HTTP Strict Transport Security (HSTS) for HTTPS enforcement",
        "Add X-Frame-Options to prevent clickjacking attacks",
        "Set X-Content-Type-Options to prevent MIME type sniffing"
      ],
      "code_snippet": "// Node.js Express with Helmet\nconst helmet = require('helmet');\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"]\n    }\n  },\n  hsts: { maxAge: 31536000, includeSubDomains: true }\n}));\n\n// Nginx configuration\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;",
      "resource_links": [
        {
          "type": "doc",
          "title": "OWASP Secure Headers Project",
          "url": "https://owasp.org/www-project-secure-headers/",
          "youtube_id": null
        },
        {
          "type": "blog",
          "title": "Security Headers Best Practices",
          "url": "https://securityheaders.com/",
          "youtube_id": null
        },
        {
          "type": "youtube",
          "title": "Web Security Headers Explained",
          "url": "https://www.youtube.com/watch?v=zEV3HOuM_Vw",
          "youtube_id": "zEV3HOuM_Vw"
        }
      ],
      "cwe_cve": "CWE-16",
      "priority": "P0",
      "estimated_effort": "med",
      "confidence": "high",
      "waf_rules": [],
      "notes": "Auto-generated solution based on vulnerability type"
    }
  },
  {
    "route": "https://jnnce.ac.in/messagefromprincipal.html",
    "attack": "headers",
    "evidence": "Critical headers missing: CSP, X-Frame-Options, Server: Apache",
    "severity": "high",
    "solution": {
      "solution": "Implement comprehensive security headers to protect against common web vulnerabilities",
      "remediation_steps": [
        "Configure Content Security Policy (CSP) to prevent XSS attacks",
        "Enable HTTP Strict Transport Security (HSTS) for HTTPS enforcement",
        "Add X-Frame-Options to prevent clickjacking attacks",
        "Set X-Content-Type-Options to prevent MIME type sniffing"
      ],
      "code_snippet": "// Node.js Express with Helmet\nconst helmet = require('helmet');\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"]\n    }\n  },\n  hsts: { maxAge: 31536000, includeSubDomains: true }\n}));\n\n// Nginx configuration\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;",
      "resource_links": [
        {
          "type": "doc",
          "title": "OWASP Secure Headers Project",
          "url": "https://owasp.org/www-project-secure-headers/",
          "youtube_id": null
        },
        {
          "type": "blog",
          "title": "Security Headers Best Practices",
          "url": "https://securityheaders.com/",
          "youtube_id": null
        },
        {
          "type": "youtube",
          "title": "Web Security Headers Explained",
          "url": "https://www.youtube.com/watch?v=zEV3HOuM_Vw",
          "youtube_id": "zEV3HOuM_Vw"
        }
      ],
      "cwe_cve": "CWE-16",
      "priority": "P0",
      "estimated_effort": "med",
      "confidence": "high",
      "waf_rules": [],
      "notes": "Auto-generated solution based on vulnerability type"
    }
  },
  {
    "route": "https://jnnce.ac.in/messagefrompresident.html",
    "attack": "headers",
    "evidence": "Critical headers missing: CSP, X-Frame-Options, Server: Apache",
    "severity": "high",
    "solution": {
      "solution": "Implement comprehensive security headers to protect against common web vulnerabilities",
      "remediation_steps": [
        "Configure Content Security Policy (CSP) to prevent XSS attacks",
        "Enable HTTP Strict Transport Security (HSTS) for HTTPS enforcement",
        "Add X-Frame-Options to prevent clickjacking attacks",
        "Set X-Content-Type-Options to prevent MIME type sniffing"
      ],
      "code_snippet": "// Node.js Express with Helmet\nconst helmet = require('helmet');\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"]\n    }\n  },\n  hsts: { maxAge: 31536000, includeSubDomains: true }\n}));\n\n// Nginx configuration\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;",
      "resource_links": [
        {
          "type": "doc",
          "title": "OWASP Secure Headers Project",
          "url": "https://owasp.org/www-project-secure-headers/",
          "youtube_id": null
        },
        {
          "type": "blog",
          "title": "Security Headers Best Practices",
          "url": "https://securityheaders.com/",
          "youtube_id": null
        },
        {
          "type": "youtube",
          "title": "Web Security Headers Explained",
          "url": "https://www.youtube.com/watch?v=zEV3HOuM_Vw",
          "youtube_id": "zEV3HOuM_Vw"
        }
      ],
      "cwe_cve": "CWE-16",
      "priority": "P0",
      "estimated_effort": "med",
      "confidence": "high",
      "waf_rules": [],
      "notes": "Auto-generated solution based on vulnerability type"
    }
  },
  {
    "route": "https://jnnce.ac.in/messagefromsecretary.html",
    "attack": "headers",
    "evidence": "Critical headers missing: CSP, X-Frame-Options, Server: Apache",
    "severity": "high",
    "solution": {
      "solution": "Implement comprehensive security headers to protect against common web vulnerabilities",
      "remediation_steps": [
        "Configure Content Security Policy (CSP) to prevent XSS attacks",
        "Enable HTTP Strict Transport Security (HSTS) for HTTPS enforcement",
        "Add X-Frame-Options to prevent clickjacking attacks",
        "Set X-Content-Type-Options to prevent MIME type sniffing"
      ],
      "code_snippet": "// Node.js Express with Helmet\nconst helmet = require('helmet');\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\"]\n    }\n  },\n  hsts: { maxAge: 31536000, includeSubDomains: true }\n}));\n\n// Nginx configuration\nadd_header X-Frame-Options \"SAMEORIGIN\" always;\nadd_header X-Content-Type-Options \"nosniff\" always;\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;",
      "resource_links": [
        {
          "type": "doc",
          "title": "OWASP Secure Headers Project",
          "url": "https://owasp.org/www-project-secure-headers/",
          "youtube_id": null
        },
        {
          "type": "blog",
          "title": "Security Headers Best Practices",
          "url": "https://securityheaders.com/",
          "youtube_id": null
        },
        {
          "type": "youtube",
          "title": "Web Security Headers Explained",
          "url": "https://www.youtube.com/watch?v=zEV3HOuM_Vw",
          "youtube_id": "zEV3HOuM_Vw"
        }
      ],
      "cwe_cve": "CWE-16",
      "priority": "P0",
      "estimated_effort": "med",
      "confidence": "high",
      "waf_rules": [],
      "notes": "Auto-generated solution based on vulnerability type"
    }
  }
]